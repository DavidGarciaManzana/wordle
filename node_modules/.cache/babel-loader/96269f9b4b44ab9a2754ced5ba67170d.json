{"ast":null,"code":"var _jsxFileName = \"/home/david/projects/react/wordle/src/components/Guess/Guess.js\";\nimport React from 'react';\nimport { range } from '../../utils';\nimport { checkGuess } from '../../game-helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Guess(_ref) {\n  let {\n    value,\n    answer\n  } = _ref;\n\n  if (value) {\n    const checkedValue = checkGuess(value.answer, answer);\n    console.log(checkedValue);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"guess\",\n    children: range(5).map(cell => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"cell\",\n      children: value ? value.answer[cell] : undefined\n    }, value ? `${value.id}-${cell}` : cell, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Guess;\nexport default Guess;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guess\");","map":{"version":3,"sources":["/home/david/projects/react/wordle/src/components/Guess/Guess.js"],"names":["React","range","checkGuess","Guess","value","answer","checkedValue","console","log","map","cell","undefined","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;;AAEA,SAASC,KAAT,OAAkC;AAAA,MAAnB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAmB;;AAChC,MAAID,KAAJ,EAAW;AACT,UAAME,YAAY,GAAGJ,UAAU,CAACE,KAAK,CAACC,MAAP,EAAeA,MAAf,CAA/B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACD;;AAED,sBACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA,cACGL,KAAK,CAAC,CAAD,CAAL,CAASQ,GAAT,CAAcC,IAAD,iBACZ;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,gBACGN,KAAK,GAAGA,KAAK,CAACC,MAAN,CAAaK,IAAb,CAAH,GAAwBC;AADhC,OAA4BP,KAAK,GAAI,GAAEA,KAAK,CAACQ,EAAG,IAAGF,IAAK,EAAvB,GAA2BA,IAA5D;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAfQP,K;AAiBT,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { range } from '../../utils';\nimport { checkGuess } from '../../game-helpers';\n\nfunction Guess({ value, answer }) {\n  if (value) {\n    const checkedValue = checkGuess(value.answer, answer);\n    console.log(checkedValue);\n  }\n\n  return (\n    <p className=\"guess\">\n      {range(5).map((cell) => (\n        <span className=\"cell\" key={value ? `${value.id}-${cell}` : cell}>\n          {value ? value.answer[cell] : undefined}\n        </span>\n      ))}\n    </p>\n  );\n}\n\nexport default Guess;\n"]},"metadata":{},"sourceType":"module"}