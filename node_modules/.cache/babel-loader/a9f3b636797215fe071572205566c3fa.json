{"ast":null,"code":"var _jsxFileName = \"/home/david/projects/react/wordle/src/components/Game/Game.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { sample } from '../../utils';\nimport { WORDS } from '../../data';\nimport GuessInput from '../GuessInput';\nimport PreviousGuess from '../PreviousGuess'; // Pick a random word on every pageload.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst answer = sample(WORDS); // To make debugging easier, we'll log the solution in the console.\n\nconsole.info({\n  answer\n});\n\nfunction Game() {\n  _s();\n\n  const [guesses, setGuesses] = React.useState([]);\n\n  const handlePreviousGuesses = inputValue => {\n    const newObject = {\n      answer: inputValue,\n      id: crypto.randomUUID()\n    };\n    let newArray = [...guesses, newObject];\n    setGuesses(newArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PreviousGuess, {\n      handlePreviousGuesses: handlePreviousGuesses,\n      guesses: guesses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GuessInput, {\n      handlePreviousGuesses: handlePreviousGuesses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Game, \"o1oJThhKU1yQYkTwv9Oq4sjxIZ4=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/david/projects/react/wordle/src/components/Game/Game.js"],"names":["React","sample","WORDS","GuessInput","PreviousGuess","answer","console","info","Game","guesses","setGuesses","useState","handlePreviousGuesses","inputValue","newObject","id","crypto","randomUUID","newArray"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,aAAP,MAA0B,kBAA1B,C,CAEA;;;;AACA,MAAMC,MAAM,GAAGJ,MAAM,CAACC,KAAD,CAArB,C,CACA;;AACAI,OAAO,CAACC,IAAR,CAAa;AAAEF,EAAAA;AAAF,CAAb;;AAEA,SAASG,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,KAAK,CAACW,QAAN,CAAe,EAAf,CAA9B;;AACA,QAAMC,qBAAqB,GAAIC,UAAD,IAAgB;AAC5C,UAAMC,SAAS,GAAG;AAChBT,MAAAA,MAAM,EAAEQ,UADQ;AAEhBE,MAAAA,EAAE,EAAEC,MAAM,CAACC,UAAP;AAFY,KAAlB;AAIA,QAAIC,QAAQ,GAAG,CAAC,GAAGT,OAAJ,EAAYK,SAAZ,CAAf;AACAJ,IAAAA,UAAU,CAACQ,QAAD,CAAV;AACD,GAPD;;AAQA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,qBAAqB,EAAEN,qBAAtC;AAA6D,MAAA,OAAO,EAAEH;AAAtE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,qBAAqB,EAAEG;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;GAhBQJ,I;;KAAAA,I;AAkBT,eAAeA,IAAf","sourcesContent":["import React from 'react';\n\nimport { sample } from '../../utils';\nimport { WORDS } from '../../data';\nimport GuessInput from '../GuessInput';\nimport PreviousGuess from '../PreviousGuess';\n\n// Pick a random word on every pageload.\nconst answer = sample(WORDS);\n// To make debugging easier, we'll log the solution in the console.\nconsole.info({ answer });\n\nfunction Game() {\n  const [guesses, setGuesses] = React.useState([]);\n  const handlePreviousGuesses = (inputValue) => {\n    const newObject = {\n      answer: inputValue,\n      id: crypto.randomUUID(),\n    };\n    let newArray = [...guesses,newObject];\n    setGuesses(newArray);\n  };\n  return (\n    <>\n      <PreviousGuess handlePreviousGuesses={handlePreviousGuesses} guesses={guesses}></PreviousGuess>\n      <GuessInput handlePreviousGuesses={handlePreviousGuesses}></GuessInput>\n    </>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}